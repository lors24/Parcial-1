\documentclass[10pt]{article}
\usepackage[spanish]{babel}
\usepackage[utf8]{inputenc}

\title{Tarea 1}
\author{Lorena Domínguez Ponce}

\begin{document}

\maketitle
<<cargar-librerias>>=
library(ggplot2)
library(plyr)
library(reshape2)
library(kknn)
library(dplyr)
library(ISLR)
@

\section{Ejercicio 1}

\subsection{Preparación de los datos}
Queremos predecir el salario de un beisbolista en función de varias estadísticas que describen su desempeño.

<<1.1>>=
data <- Hitters
#head(data)
dim(data)
data <- data[,sapply(data, is.numeric)]
dim(data)
@

La base original tiene información sobre 322 bateadores con 20 variables. Para el análisis nos vamos a quedar únicamente con las variables numéricas, por lo que ahora contamos únicamente con 17 de las variables originales. Vamos a revisar si tenemos datos faltantes en la base. 

<<1.2>>=
complete <- sapply(1:ncol(Hitters), function(i){
    s <- sum(complete.cases(Hitters[,i]))
})
casos.completos <- data.frame(names(Hitters), complete)
casos.completos

proporcion.completos = mean(complete.cases(data)) * 100
proporcion.completos
data.clean = data[complete.cases(data),]
@

Vemos que la única variable en la que hay valores faltantes es en el salario que es justo la que queremos predecir. Entonces vamos a quitar de la la información de los beisbolistas en los que no tenemos información sobre su salario. \\

Si quitamos los 59 NA nos quedamos con el 81$\%$ de los datos originales. \\

Apartamos una muestra de prueba de tamaño 100, el resto será de entrenamiento.

<<1.3>>=
data.clean$id = row.names(data.clean)
row.names(data.clean) <- NULL
n.test <- 100
indices.test <- sample(data.clean$id, n.test)
data.train <- data.clean %.% filter(!(id %in% indices.test))
data.test <- data.clean %.% filter( id %in% indices.test)

nrow(data.train)
nrow(data.test)
@

Vamos a estandarizar los datos.

\section{Ejercicio 3}
<<3.1>>=

rm(list=ls())
#100 muestras de entrenamiento de tamaño 30

# conjunto de prueba

xp <- runif(50)
yp <- abs(xp-0.5) + rnorm(length(xp))
datos.prueba <- data.frame(x = xp, y = yp)

salida.sim.lista <- lapply(1:100, function(i){
    x <- runif(30)
    y <- abs(x-0.5) + rnorm(length(x))
    datos <- data.frame(x = x,y = y)
    f.hat <- kknn(y ~ x, 
                  train = datos, 
                  test = datos,
                  k = 3, kernel = 'rectangular')
    error.entrena <- mean((fitted(f.hat) - datos$y)^2)
  
    # datos de prueba
    f.hat2 <- kknn(y ~ x,
                  train = datos,
                  test = datos.prueba,
                  k = 3, kernel = 'rectangular')
    error.prueba <- mean((fitted(f.hat2)-datos.prueba$y)^2)     
    
    data.frame(muestra = i,error.entrena, error.prueba)
})

salida.sim <- rbind_all(salida.sim.lista)
sal.m <- melt(salida.sim, id.vars='muestra')

ggplot(sal.m,
       aes(x = muestra, y = value, col = variable, group = variable)) + geom_line() +
    geom_point()
@

\end{document}